#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
# 

name: OpenWrt-COAENS K2P

on:
#  push:
#    branches: 
#      - master
  watch:
    types: started

env:
 SSH_ACTIONS: false
 TZ: Asia/Shanghai

jobs:
  build_openwrt:
    name: Build OpenWrt K2P
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          df -h

      - name: Clone Lean's openwrt
        run: |
          git clone https://github.com/coolsnowwolf/lede

      - name: Git Third Party Plugin
        run: |
          cd lede/package
          git clone https://github.com/kenzok8/openwrt-packages.git
          git clone https://github.com/kenzok8/small.git
          git clone https://github.com/riverscn/openwrt-iptvhelper.git

      - name: Update feeds
        run: |
          cd lede
          sed -i 's/^PKG_VERSION:=.*$/PKG_VERSION:=1.15.1/g' package/lean/trojan/Makefile
          sed -i 's/^PKG_SOURCE_VERSION:=.*$/PKG_SOURCE_VERSION:=0bad2988c60200c15786baf6b9ea42d66ba2109c/g' package/lean/trojan/Makefile
          sed -i 's/\"#src-git\"/\"src-git\"/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: SSH connection to Actions
        uses: P3TERX/debugger-action@master
        if: env.SSH_ACTIONS == 'true'

      - name: Generate configuration file
        run: |
          cd lede
          rm -f ./.config*
          touch ./.config
          
          #
          # ========================固件定制部分========================
          # 
          # 
          # 如果不对本区块做出任何编辑, 则生成默认配置固件. 
          # 
          # 以下为定制化固件选项和说明:
          #
          #
          # 有些插件/选项是默认开启的, 如果想要关闭, 请参照以下示例进行编写:
          # 
          #          =========================================
          #         |  # 取消编译VMware镜像:                   |
          #         |  cat >> .config <<EOF                   |
          #         |  # CONFIG_VMDK_IMAGES is not set        |
          #         |  EOF                                    |
          #          =========================================
          #
          # 
          # 以下是一些提前准备好的一些插件选项.
          # 直接取消注释相应代码块即可应用. 不要取消注释代码块上的汉字说明.
          # 如果不需要代码块里的某一项配置, 只需要删除相应行.
          #
          # 如果需要其他插件, 请按照示例自行添加.
          # 注意, 只需添加依赖链顶端的包. 如果你需要插件 A, 同时 A 依赖 B, 即只需要添加 A.
          # 
          # 无论你想要对固件进行怎样的定制, 都需要且只需要修改 EOF 回环内的内容.
          #
          
          # 编译x64固件:
          # cat >> .config <<EOF
          # CONFIG_TARGET_x86=y
          # CONFIG_TARGET_x86_64=y
          # CONFIG_TARGET_x86_64_Generic=y
          # EOF
          
          # 编译N1固件:
          # cat >> .config <<EOF
          # CONFIG_TARGET_armvirt=y
          # CONFIG_TARGET_armvirt_64=y
          # CONFIG_TARGET_armvirt_64_Default=y
          # # CONFIG_TARGET_ROOTFS_CPIOGZ is not set
          # # CONFIG_TARGET_ROOTFS_SQUASHFS is not set
          # EOF
          
          # 编译K2P固件
          cat >> .config <<EOF
          CONFIG_TARGET_ramips=y
          CONFIG_TARGET_ramips_mt7621=y
          CONFIG_TARGET_ramips_mt7621_DEVICE_phicomm_k2p=y
          EOF
          
          # 固件压缩:
          # cat >> .config <<EOF
          # CONFIG_TARGET_IMAGES_GZIP=y
          # EOF
          
          # 编译UEFI固件:
          # cat >> .config <<EOF
          # CONFIG_EFI_IMAGES=y
          # EOF
          
          # IPv6支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          CONFIG_PACKAGE_ipv6helper=y
          EOF
          
          # 多文件系统支持:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_kmod-fs-nfs=y
          # CONFIG_PACKAGE_kmod-fs-nfs-common=y
          # CONFIG_PACKAGE_kmod-fs-nfs-v3=y
          # CONFIG_PACKAGE_kmod-fs-nfs-v4=y
          # CONFIG_PACKAGE_kmod-fs-ntfs=y
          # CONFIG_PACKAGE_kmod-fs-squashfs=y
          # EOF
          
          # USB3.0支持:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_kmod-usb-ohci=y
          # CONFIG_PACKAGE_kmod-usb-ohci-pci=y
          # CONFIG_PACKAGE_kmod-usb2=y
          # CONFIG_PACKAGE_kmod-usb2-pci=y
          # CONFIG_PACKAGE_kmod-usb3=y
          # EOF
          
          # 常用LuCI插件选择:
          cat >> .config <<EOF
          # CONFIG_PACKAGE_luci-app-accesscontrol is not set
          # CONFIG_PACKAGE_luci-app-adbyby-plus is not set
          # CONFIG_PACKAGE_luci-app-adguardhome is not set
          # CONFIG_PACKAGE_luci-app-airplay2 is not set
          # CONFIG_PACKAGE_luci-app-amule is not set
          # CONFIG_PACKAGE_luci-app-aria2 is not set
          # CONFIG_PACKAGE_luci-app-arpbind is not set
          CONFIG_PACKAGE_luci-app-autoreboot=y
          CONFIG_PACKAGE_luci-app-ddns=y
          # CONFIG_PACKAGE_luci-app-filetransfer is not set
          CONFIG_PACKAGE_luci-app-firewall=y
          CONFIG_PACKAGE_luci-app-flowoffload=y
          # CONFIG_PACKAGE_luci-app-frpc is not set
          # CONFIG_PACKAGE_luci-app-hd-idle is not set
          # CONFIG_PACKAGE_luci-app-ipsec-vpnd is not set
          CONFIG_PACKAGE_luci-app-mtwifi=y
          # CONFIG_PACKAGE_luci-app-music-remote-center is not set
          CONFIG_PACKAGE_luci-app-mwan3=y
          CONFIG_PACKAGE_luci-app-mwan3helper=y
          # CONFIG_PACKAGE_luci-app-nlbwmon is not set
          # CONFIG_PACKAGE_luci-app-nps is not set
          # CONFIG_PACKAGE_luci-app-openvpn-server is not set
          # CONFIG_PACKAGE_luci-app-qbittorrent is not set
          CONFIG_PACKAGE_luci-app-ramfree=y
          # CONFIG_PACKAGE_luci-app-samba is not set
          # CONFIG_PACKAGE_luci-app-smartdns is not set
          # CONFIG_PACKAGE_luci-app-softethervpn is not set
          CONFIG_PACKAGE_luci-app-ssr-plus=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray_plugin is not set
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Redsocks2 is not set
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun is not set
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Server=y
          # CONFIG_PACKAGE_luci-app-udpxy is not set
          # CONFIG_PACKAGE_luci-app-unblockmusic is not set
          # CONFIG_UnblockNeteaseMusic_Go is not set
          # CONFIG_UnblockNeteaseMusic_NodeJS is not set
          # CONFIG_PACKAGE_luci-app-upnp is not set
          # CONFIG_PACKAGE_luci-app-v2ray-server is not set
          CONFIG_PACKAGE_luci-app-vlmcsd=y
          # CONFIG_PACKAGE_luci-app-vsftpd is not set
          CONFIG_PACKAGE_luci-app-wol=y
          # CONFIG_PACKAGE_luci-app-wrtbwmon is not set
          # CONFIG_PACKAGE_luci-app-xlnetacc is not set
          CONFIG_PACKAGE_luci-app-zerotier=y
          EOF
          
          # LuCI主题:
          cat >> .config <<EOF
          CONFIG_PACKAGE_luci-theme-bootstrap=y
          # CONFIG_PACKAGE_luci-theme-netgear is not set
          EOF
          
          # 常用软件包:
          cat >> .config <<EOF
          CONFIG_PACKAGE_curl=y
          # CONFIG_PACKAGE_htop is not set
          CONFIG_PACKAGE_wget=y
          CONFIG_PACKAGE_ddns-scripts_cloudflare.com-v4=y
          CONFIG_PACKAGE_openssh-sftp-server=y
          # CONFIG_PACKAGE_luci-ssl-openssl is not set
          CONFIG_PACKAGE_omcproxy=y
          CONFIG_PACKAGE_udpxy=y
          # CONFIG_PACKAGE_xupnpd is not set
          CONFIG_PACKAGE_iptvhelper=y
          EOF
          
          # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
          # cat >> .config <<EOF
          # # CONFIG_TARGET_IMAGES_PAD is not set
          # # CONFIG_VMDK_IMAGES is not set
          # EOF
          # 
          # ========================固件定制部分结束========================
          # 
          
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
          cat .config

      - name: Make download
        run: |
          cd lede
          make download -j8
          find dl -size -1024c -exec rm -f {} \;
          
      - name: Compile firmware
        run: |
          cd lede
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
          
      - name: Prepare artifact
        run: find ./lede/bin/targets/ -type d -name "packages" | xargs rm -rf {}

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt_K2P
          path: ./lede/bin/targets/

      - name: Create release
        if: github.event == 'push'
        id: create_release
        uses: actions/create-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false      

      - name: Upload release asset
        if: github.event == 'push'
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./lede/bin/targets/*/*/
